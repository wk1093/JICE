
# jice_compile(testproject)
# ->
# mkdir -p testproject/build
# python3 {CURRENT_DIR}/main.py testproject testproject/build

function(jice_compile directory)
    # This needs to run RIGHT NOW, before any other configuration, because later configuration (the project) needs the files generated by this command
    execute_process(
            COMMAND python3 ${CMAKE_CURRENT_FUNCTION_LIST_DIR}/main.py ${directory} ${directory}/build
    )
    # This also needs to run on build, so that the files are generated before the build
    # we make it so this command is always out of date, and is required by the project build
    file(GLOB_RECURSE depends ${directory}/*.json ${directory}/*.cpp)
    add_custom_command(
            OUTPUT ${directory}/build
            OUTPUT ${directory}/build/main.cpp
            OUTPUT ${directory}/build/CMakeLists.txt
            OUTPUT ${directory}/build/__fake_file__.h # always out of date
            COMMAND python3 ${CMAKE_CURRENT_FUNCTION_LIST_DIR}/main.py ${directory} ${directory}/build
            DEPENDS ${directory}/proj.json
            DEPENDS ${depends}
            COMMENT "Generating project files for ${directory}"
    )
    add_subdirectory(${directory}/build jice_build)
endfunction()